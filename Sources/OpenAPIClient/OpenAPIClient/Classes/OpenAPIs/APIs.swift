// APIs.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

// We reverted the change of OpenAPIClientAPI to OpenAPIClient introduced in https://github.com/OpenAPITools/openapi-generator/pull/9624
// Because it was causing the following issue https://github.com/OpenAPITools/openapi-generator/issues/9953
// If you are affected by this issue, please consider removing the following two lines,
// By setting the option removeMigrationProjectNameClass to true in the generator
@available(*, deprecated, renamed: "OpenAPIClientAPI")
public typealias OpenAPIClient = OpenAPIClientAPI

open class OpenAPIClientAPI {
    public static var basePath = "https://login.test2.eduid.nl"
    public static var customHeaders: [String: String] = ["Authorization":"Bearer eyJraWQiOiJrZXlfMjAyM18wM18wNl8wMF8wMF8wMF8wMDAiLCJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOlsiZGV2LmVnZW5pcS5ubCIsIm15Y29uZXh0LnJzIl0sInN1YiI6ImRldi5lZ2VuaXEubmwiLCJuYmYiOjE2NzgxMTMxOTIsInNjb3BlIjoiZWR1aWQubmxcL21vYmlsZSIsImlzcyI6Imh0dHBzOlwvXC9jb25uZWN0LnRlc3QyLnN1cmZjb25leHQubmwiLCJjbGFpbXMiOiJBUTkxeUt3N1ZUbllQSkNzR1hvZFwvelZYQ3U5M2lWcmI2eGN2VFdpQzczNlo2U2xoUXQyUHpiV3ZmMFhtYlJZMnF0VzhWWGtWTU1leVprWTAwZEhxcVh3K0h6OWgwdDZVT0FLSDI2cExHV29LMkx5ZUt6bWluM0R1Y0d6MTQ5RU12dmYzaHRuTEN6T2tGTGtVMHJ5aHJmd09mRzVSZUlSUU9qaFZJNkpDSWpNaUZ3VXYyMkt1Vld2dXg5ZmpZWWxqUFBleUlxRm9HbENQSnBaeTBka3dJT0t6MU9oWlQ0b0NRWFBzdk1GeFZkT25TQlkyYWlnZGt1TDVSdTI4cys3OVwvUFRRcHV2T1B4XC9Ud1Q3VElkKzUxQnJIcGpKUUxKaGRqZFJrbU40TlVkbWVrWHhDRldNbjhWbmlzWXpNS0JURTRKQSs5bXhBUk9yZFgramU1K2x3MnFrNEY0UEdLZTV0NWozbXc0K3o2VjZJalBCSUZVS1FObHhyS0l3cUhoZjRkTHg0RXVMcG9wQWFxbFM4WHpCXC9yT25MOTQ0OVJ2ZjZIT2ViazJZajV6WHNcL0YxZWhGYWdBc0FaVnlReFFMXC9qK21ST0ZJdzhRQTk1bUZDdEdJRFlaWGE5R05FWkM3NXhWME1IbGwzdlwvQlN5b1JPXC85S295TmF2eDRtaTFISWFNeDUzOXBjS0dOcUNQU2VSR09qbnVaUVBRUTB1VGljMjdRamZKZFJKSEQ0Zzh1ZFZyVDZVOXJKTlFVZDIzVXpMMXMwcVwvXC9id2FHNjhicjR0NUNIXC9lcExPK1oyaThTNFpRZFVkRHBzK1dodVJRSVZQSDNCMEREeVFKVTBjY0sySEJERmVCeTlWc1laUFV6emlFUVVJTDhtekZLcnAraEs3ZUFPTlUiLCJleHAiOjE2NzgxMTY3OTIsImNsYWltX2tleV9pZCI6IjI1OTM3NzMyNCIsImlhdCI6MTY3ODExMzE5MiwianRpIjoiZDJmNTdhOTktZGQwMS00MWMwLWJhMDAtZmIwOTRkMjM4MWYzIn0.sF1YN8fKZFUeUCZl9Gdr2go0DHz5_D838j5XJIxcoeMVu0fQGsGROtPG7YxAlkP9jBKQJyBJ3Yo5TKA-3idLcay22WrNaoLs3-4zBl0AhzIpCKTI5iZGrBkhbcaWUX4Wkl9b4IpBl5xbxuG_j0Bc5ZkAFiexHlNjBB62U3b-V7CwYFxxVS9E36a37NAzeOoxsyxHg7mHOv3xXhT2fBDlSchWWAqmKtURUBx9tvGL15Ig2zr3LBvODGTL7jnSYKEkijtTiKs2zkOqIw0khKCOwbYPgtA03vws3b2QxpsCt7y3ZfQMmhTGM7B_qGlHAQa1b4e-8K_WKrjTedo0PnBggQ"]
    public static var credential: URLCredential?
    public static var requestBuilderFactory: RequestBuilderFactory = URLSessionRequestBuilderFactory()
    public static var apiResponseQueue: DispatchQueue = .main
}

open class RequestBuilder<T> {
    var credential: URLCredential?
    var headers: [String: String]
    public let parameters: [String: Any]?
    public let method: String
    public let URLString: String
    public let requestTask: RequestTask = RequestTask()
    public let requiresAuthentication: Bool

    /// Optional block to obtain a reference to the request's progress instance when available.
    /// With the URLSession http client the request's progress only works on iOS 11.0, macOS 10.13, macCatalyst 13.0, tvOS 11.0, watchOS 4.0.
    /// If you need to get the request's progress in older OS versions, please use Alamofire http client.
    public var onProgressReady: ((Progress) -> Void)?

    required public init(method: String, URLString: String, parameters: [String: Any]?, headers: [String: String] = [:], requiresAuthentication: Bool) {
        self.method = method
        self.URLString = URLString
        self.parameters = parameters
        self.headers = headers
        self.requiresAuthentication = requiresAuthentication

        addHeaders(OpenAPIClientAPI.customHeaders)
    }

    open func addHeaders(_ aHeaders: [String: String]) {
        for (header, value) in aHeaders {
            headers[header] = value
        }
    }

    @discardableResult
    open func execute(_ apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, _ completion: @escaping (_ result: Swift.Result<Response<T>, ErrorResponse>) -> Void) -> RequestTask {
        return requestTask
    }

    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    @discardableResult
    open func execute() async throws -> Response<T> {
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                  continuation.resume(throwing: CancellationError())
                  return
                }

                self.execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: {
            self.requestTask.cancel()
        }
    }
    
    public func addHeader(name: String, value: String) -> Self {
        if !value.isEmpty {
            headers[name] = value
        }
        return self
    }

    open func addCredential() -> Self {
        credential = OpenAPIClientAPI.credential
        return self
    }
}

public protocol RequestBuilderFactory {
    func getNonDecodableBuilder<T>() -> RequestBuilder<T>.Type
    func getBuilder<T: Decodable>() -> RequestBuilder<T>.Type
}
